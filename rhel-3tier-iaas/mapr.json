{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "artifactsBaseUrl": {
      "type": "string",
      "defaultValue": "https://raw.githubusercontent.com/thbeh/azure-quickstart-templates/master/rhel-3tier-iaas",
      "metadata": {
        "artifactsBaseUrl": "Base URL of the Publisher Template gallery package"
      }
    },
    "installOpenVPN": {
      "type": "string",
      "defaultValue": "true",
      "metadata": {
        "description": "Enable access to private cluster"
      }
    },    
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "Username for the Virtual Machines"
      }
    },
    "adminPassword": {
      "minLength": 12,
      "type": "securestring",
      "metadata": {
        "description": "Password for the Virtual Machines(Min Length: 12)"
      }
    },
    "sshKeyData": {
      "type": "string",
      "metadata": {
        "description": "Public key for SSH authentication"
      }
    },  
    "openVpnUser": {
      "type": "string",
      "defaultValue": "openvpn",
      "metadata": {
        "description": "OpenVPN login user"
      }
    },
    "openVpnPassword": {
      "type": "securestring",
      "metadata": {
        "description": "OpenVPN user password (Please use a strong password to protect your cluster)"
      }
    },  
    "webTierVmCount": {
      "defaultValue": 1,
      "type": "int",
      "metadata": {
        "description": "Number of Web servers to be deployed"
      }
    },
    "databaseTierVmCount": {
      "defaultValue": 1,
      "type": "int",
      "metadata": {
        "description": "Number of Database servers to be deployed"
      }
    },
    "remoteAllowedCIDR": {
      "type": "string",
      "minLength": 7,
      "defaultValue": "0.0.0.0/0",
      "metadata": {
        "description": "Enter Public IP CIDR to allow for accessing the deployment.Enter in 0.0.0.0/0 format, you can always modify these later in NSG Settings"
      }
    },
    "vnetPublicSubnetStartAddress": {
      "type": "string",
      "defaultValue": "172.25.144.62",
      "metadata": {
        "description": "Virtual network public subnet start address"
      }
    },
    "vnetResourceGroup": {
      "type": "string",
      "metadata": {
        "description": "Virtual network resource group"
      }
    },
    "vnetAddressPrefix": {
      "type": "string",
      "defaultValue": "172.25.144.0/26",
      "metadata": {
        "description": "Virtual network address prefix"
      }
    },  
    "vpnAddressPrefix": {
      "type": "string",
      "defaultValue": "172.25.144.32/28",
      "metadata": {
        "description": "VPN Virtual network address prefix"
      }
    },          
    "publicAccessCIDR": {
      "type": "string",
      "defaultValue": "*",
      "metadata": {
        "description": "Public internet access CIDR. Use * for all internet traffic"
      }
    },
    "vnetPublicSubnetAddressPrefix": {
      "type": "string",
      "defaultValue": "172.25.144.48/28",
      "metadata": {
        "description": "Virtual network public subnet address prefix"
      }
    },
    "vnetClusterSubnetAddressPrefix": {
      "type": "string",
      "defaultValue": "172.25.144.0/27",
      "metadata": {
        "description": "Virtual network cluster subnet address prefix"
      }
    },

    "vmIdentifier": {
      "type": "string",
      "metadata": {
        "description": "VM Identifier"
      }
    }
  },

  "variables": {
    "vmSize": "Standard_A2",
    "vmStorageAccountType": "Standard_GRS",
    "vmStorageAccountName": "[concat(uniqueString(resourceGroup().id),'storage')]",
    "diagStorageAccountName": "[concat(uniqueString(resourceGroup().id),'diagstorage')]",
    "vmStorageAccountContainerName": "vhds",
    "virtualNetworkName": "[concat(parameters('vmIdentifier'),'-VNET')]",
    "webTierSubnetName": "[concat(parameters('vmIdentifier'),'-EDGE-SUBNET')]",
    "databaseTierSubnetName": "[concat(parameters('vmIdentifier'),'-SUBNET')]",
    "jumpSubnetName": "gateway-subnet",
    "webNSGName": "[concat(parameters('vmIdentifier'),'-COMMON-NSG')]",
    "webIPAddressName": "[concat(parameters('vmIdentifier'),'COMMON-PIP')]",
    "webDnsLabel": "[concat('web',uniqueString(resourceGroup().id))]",
    "databaseNSGName": "[concat(parameters('vmIdentifier'), '-NSG')]",
    "jumpNSGName": "[concat(parameters('vmIdentifier'),'-EDGE-NSG')]",
    "vpnNSGName": "[concat(parameters('vmIdentifier'),'-VPN-NSG')]",
    "jumpIPAddressName": "gateway-pip",
    "jumpDnsLabel": "[concat('jump',uniqueString(resourceGroup().id))]",
    "availSetName": "[concat(parameters('vmIdentifier'),'-AVAIL-SET')]",
    "webTierVmNicName": "[concat(variables('webTierVmName'), '-nic-')]",
    "ansibleVmNicName": "[concat(variables('ansibleVmName'), '-nic')]",
    "databaseTierVmNicName": "[concat(variables('databaseTierVmName'), '-nic-')]",
    "jumpVmNicName": "[concat(variables('jumpVmName'), '-nic')]",
    "imageSKU": "7.4",
    "imagePublisher": "OpenLogic",
    "imageOffer": "CentOS",
    "webTierVmName": "common-svc-vm",
    "databaseTierVmName": "mapr-vm",
    "jumpVmName": "gateway-vm",
    "ansibleVmName": "ansible-vm",

    "jumpInstanceType": "Standard_D2s_v3",
    "diskType": "Premium_LRS",
    "maprNetworkTemplate": "MapR.Network.Template",    
    "maprOpenVPNTemplate": "MapR.OpenVPN.Template",
    "maprJumpBoxTemplate": "Mapr.JumpBox.Template",
    "deploymentsVersion": "2016-09-01",
    "computeApiVersion": "2017-03-30",
    "vnetPublicSubnetName": "[concat(parameters('vmIdentifier'),'-EDGE-SUBNET')]",
    "vpnPublicSubnetName": "[concat(parameters('vmIdentifier'),'-VPN-SUBNET')]",        
    "virtualNetworkId": "[resourceId(parameters('vnetResourceGroup'), 'Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]",
    "addressPrefix": "[parameters('vnetAddressPrefix')]",
    "fourDotSubnetPublic": "[concat(take(parameters('vnetPublicSubnetStartAddress'), add(lastIndexOf(parameters('vnetPublicSubnetStartAddress'), '.'), 1)), '0')]",
    "subnetPrefixPublic": "[parameters('vnetPublicSubnetAddressPrefix')]",
    "subnetNamePublic": "[variables('vnetPublicSubnetName')]",
    "subnetRefPublic": "[concat(variables('virtualNetworkId'), '/subnets/', variables('subnetNamePublic'))]",

    "subnetRefPrivate": "[concat(variables('virtualNetworkId'), '/subnets/', variables('webTierSubnetName'))]",


    "redHatTags": {
      "type": "object",
      "provider": "9d2c71fc-96ba-4b4a-93b3-14def5bc96fc"
      },
    "quickstartTags": {
      "type": "object",
      "name": "rhel-3tier-iaas"
      },
    "sshKeyPath": "[concat('/home/', parameters('adminUsername'),'/.ssh/authorized_keys')]",
    "cloudConfig": ""      
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('diagStorageAccountName')]",
      "apiVersion": "2016-01-01",
      "location": "[resourceGroup().location]",
      "comments": "Storage account used to store the diagnostics data",
      "tags": {
        "displayName": "Diagnostics Storage Account",
        "quickstartName": "[variables('quickstartTags').name]",        
        "provider": "[variables('redHatTags').provider]"
      },
      "sku": {
        "name": "Standard_LRS"
      },
      "kind": "Storage",
      "properties": {

      }
    }, 
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('databaseNSGName')]",
      "apiVersion": "2016-03-30",
      "location": "[resourceGroup().location]",
      "comments": "NSG for Database Subnet. By default, intra Vnet traffic is allowed and requests from internet are denied",
      "tags": {
        "displayName": "Database NSG",
        "quickstartName": "[variables('quickstartTags').name]",        
        "provider": "[variables('redHatTags').provider]"
      },
      "properties": {
        "securityRules": [
        ]
      }
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('jumpNSGName')]",
      "apiVersion": "2016-03-30",
      "location": "[resourceGroup().location]",
      "comments": "NSG for Jump Subnet. Rules for allowing SSH from internet are created",
      "tags": {
        "displayName": "Jump NSG",
        "quickstartName": "[variables('quickstartTags').name]",        
        "provider": "[variables('redHatTags').provider]"
      },
      "properties": {
        "securityRules": [
          {
            "name": "SSH-allow",
            "properties": {
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "[parameters('remoteAllowedCIDR')]",
              "destinationAddressPrefix": "[parameters('vnetPublicSubnetAddressPrefix')]",
              "access": "Allow",
              "priority": 110,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "apiVersion": "2016-03-30",
      "location": "[resourceGroup().location]",
      "comments": "Virtual network for overall solution",
      "tags": {
        "displayName": "Virtual Network",
        "quickstartName": "[variables('quickstartTags').name]",        
        "provider": "[variables('redHatTags').provider]"
      },
      "dependsOn": [
        "[concat('Microsoft.Network/networkSecurityGroups/', variables('databaseNSGName'))]",
        "[concat('Microsoft.Network/networkSecurityGroups/', variables('jumpNSGName'))]"
      ],
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[parameters('vnetAddressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('databaseTierSubnetName')]",
            "properties": {
              "addressPrefix": "[parameters('vnetClusterSubnetAddressPrefix')]", 
              "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('databaseNSGName'))]"
              }
            }
          },
          {
            "name": "[variables('vnetPublicSubnetName')]",
            "properties": {
              "addressPrefix": "[parameters('vnetPublicSubnetAddressPrefix')]",
              "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('jumpNSGName'))]"
              }
            }
          },
          {
            "name": "[variables('vpnPublicSubnetName')]",
            "properties": {
              "addressPrefix": "[parameters('vpnAddressPrefix')]",
              "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('vpnNSGName'))]"
              }
            }
          }          
        ]
      }
    },
    {
      "type": "Microsoft.Compute/availabilitySets",
      "name": "[concat(variables('availSetName'), padLeft(copyIndex(1),2,'0'))]",
      "apiVersion": "2015-06-15",
      "location": "[resourceGroup().location]",
      "comments": "These are the Availability Sets for Web VMs, App VMs and Database VMs",
      "tags": {
        "displayName": "Availability Sets",
        "quickstartName": "[variables('quickstartTags').name]",        
        "provider": "[variables('redHatTags').provider]"
      },
      "copy": {
        "name": "availSetLoop",
        "count": 3
      },
      "properties": {

      }
    },
    {
      "name": "[variables('maprOpenVPNTemplate')]",
      "type": "Microsoft.Resources/deployments",
      "condition": "[equals(parameters('installOpenVPN'), 'true')]",
      "apiVersion": "[variables('deploymentsVersion')]",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(parameters('artifactsBaseUrl'), '/openvpn.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "providerID": {
            "value": "CD79582D-BEB4-4325-9DD6-34E684A304DB"
          },
          "clusterName": {
            "value": "[parameters('vmIdentifier')]"
          },
          "adminAuthType": {
            "value": "sshPublicKey"
          },
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "adminPublicKey": {
            "value": "[parameters('sshKeyData')]"
          },
          "diskType": {
            "value": "Premium_LRS"
          },
          "fourDotSubnetPublic": {
            "value": "[variables('fourDotSubnetPublic')]"
          },
          "ipAddress": {
            "value": "[parameters('vnetPublicSubnetStartAddress')]"
          },
          "subnetRefPublic": {
            "value": "[variables('subnetRefPublic')]"
          },
          "openvpnInstanceType": {
            "value": "Standard_D2s_v3"
          },
          "openVpnUser": {
            "value": "[parameters('openVpnUser')]"
          },
          "openVpnPassword": {
            "value": "[parameters('openVpnPassword')]"
          },
          "addressPrefix": {
            "value": "[parameters('vpnAddressPrefix')]"
          },
          "publicAccessCIDR": {
            "value": "[parameters('publicAccessCIDR')]"
          },
          "maprsgName": {
            "value": "[variables('vpnNSGName')]"
          },
          "location": {
            "value": "[resourceGroup().location]"
          },
          "artifactsBaseUrl": {
            "value": "[parameters('artifactsBaseUrl')]"
          }
        }
      }
    }
  ],
}
