{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "vmAdminUserName": {
      "type": "string",
      "minLength": 1,
      "metadata": {
        "description": "The administrative user on the Windows VM."
      }
    },
    "vNetName": {
      "type": "string",
      "defaultValue": "poc-vnet",
      "minLength": 1,
      "metadata": {
        "description": "The name of the virtual network resource."
      }
    },
    "vmCount" : {
    	"type": "int",
    	"metadata": {
    		"description": "Number of VMs"
    	}
    },
    "existingVirtualNetworkName" : {
      "type": "string",
      "metadata": {
        "description": "Name of the existing VNet"
      }
    },
    "existingVirtualNetworkResourceGroup": {
      "type": "string",
      "metadata": {
        "description": "Name of the Resource group containing the existing VNet"
      }
    },
    "existingSubnetName": {
      "type": "string",
      "metadata": {
        "description": "Name of the subnet in the VNet you want to use"
      }
    },
    "sshKeyData": {
      "type": "string",
      "metadata": {
        "description": "Public key for SSH authentication"
      }
    },
    "vmDiskCount": {
      "type": "int",
      "metadata": {
        "description": "Number of Disks"
      }
    },
    "vmDiskGB": {
      "type": "int",
      "metadata": {
        "description": "Disk size in GB"
      }
    },
    "_artifactsLocation": {
      "type": "string",
      "metadata": {
        "description": "The base URI where artifacts required by this template are located. When the template is deployed using the accompanying scripts, a private location in the subscription will be used and this value will be automatically generated."
      },
      "defaultValue": "https://raw.githubusercontent.com/thbeh/azure-quickstart-templates/master/storage-iops-latency-throughput-demo/"
    },
    "_artifactsLocationSasToken": {
      "type": "securestring",
      "metadata": {
        "description": "The sasToken required to access _artifactsLocation.  When the template is deployed using the accompanying scripts, a sasToken will be automatically generated."
      },
      "defaultValue": ""
    }
  },
  "variables": {
    "vnetID": "[resourceId(parameters('existingVirtualNetworkResourceGroup'), 'Microsoft.Network/virtualNetworks', parameters('existingVirtualNetworkName'))]",
    "subnetRef": "[concat(variables('vnetID'),'/subnets/', parameters('existingSubnetName'))]",
    "vNetPrefix": "10.0.0.0/16",
    "vNetSubnet1Name": "subnet-01",
    "vNetSubnet1Prefix": "10.0.0.0/24",
    "vmStorageAccountType": "Standard_GRS",
    "vmStorageAccountName": "kkczuzmnkatmgstorage",
    "vmStorageAccountContainerName": "vhds",    
    "storageAccountType": [ "Premium_LRS", "Standard_LRS" ],
    "storageAccountNamePrefix": [ "premium", "standard" ],
    "vmImagePublisher": "OpenLogic",
    "vm1ImageOffer": "CentOS",
    "vm1ImageSKU": "7-CI",
    "vmOSDiskName": "[concat(variables('vmName'),'-','OSDisk')]",
    "vmSize": "Standard_D32S_V3",
    "vmName": "mapr",
    "OSDiskGB": 200,
    "vmWindowsOSVersion": "7.2n",
    "vmSubnetRef": "[concat(resourceId('Microsoft.Network/virtualNetworks', parameters('existingVirtualNetworkName')), '/subnets/', parameters('existingSubnetName'))]",
    "vmContainerName": "vhds",
    "vmNicName": "[concat(variables('vmName'),'-nic-')]",
    "vmDataDiskName": "[concat(variables('vmName'),'-disk-')]",
    "dscResourceFolder": "dsc",
    "dscResourceConfig": "vmDemo",
    "diskCreateOption": "empty",
    "sshKeyPath": "[concat('/home/', parameters('vmAdminUserName'),'/.ssh/authorized_keys')]",
    "cloudConfig": "I2Nsb3VkLWNvbmZpZwpwYWNrYWdlczoKICAtIGVwZWwtcmVsZWFzZQpkaXNrX3NldHVwOgogIGVwaGVtZXJhbDA6CiAgICB0YWJsZV90eXBlOiBncHQKICAgIGxheW91dDogWzk4LCBbMiw4Ml1dCiAgICBvdmVyd3JpdGU6IHRydWUKZnNfc2V0dXA6CiAgLSBkZXZpY2U6IGVwaGVtZXJhbDAuMQogICAgZmlsZXN5c3RlbTogZXh0NAogIC0gZGV2aWNlOiBlcGhlbWVyYWwwLjIKICAgIGZpbGVzeXN0ZW06IHN3YXAKbW91bnRzOgogIC0gWyJlcGhlbWVyYWwwLjEiLCAiL21udCJdCiAgLSBbImVwaGVtZXJhbDAuMiIsICJub25lIiwgInN3YXAiLCAic3ciLCAiMCIsICIwIl0KCnNzaF9hdXRob3JpemVkX2tleXM6CiAgLSBzc2gtcnNhIEFBQUFCM056YUMxeWMyRUFBQUFCSlFBQUFRRUFub1VQR1JyKzJTd2VhSE9paEQ3V1pBbHhuSGNMRGUvQ0JnOWpGaGEwa244VHRoWkZaNEg5VXVzdXNHeDUwc0dvQkU2c3d2b2NLNUlpamlnT1U5SVZQTS9IdXBxbnVOM2E2K0hVeVBkUmJmVzZJSUtaQ3ZxWlNBSEVCZUNCZFhvd0JnVGkrQkdKU3p4VGgvTkdubndxdGhSNUtjazVNMzVYV0swWVU5Vjg4aTZhWmQ3M2Zya2MxdEtEa3I5WkRKWmVRZDRkRm5iaWEwd2pFWHF4Z1RDSWo4YzBvME5JdlZibWhyWk1VZGhDeTAyaC9zejdYbnZnc3BzQllBMlMvcTg4T29JODVlVG5ka0pNUlg0TnJjSUtBN1lDUjg5ekFYR0F1VnhrdU1qS3p3Tk8vNzlMek00WTFZTU96bWNDZk04MXBnY2tnUER5MUpJRWJRMGVEaHU3aVE9PSByc2Eta2V5LTIwMTgwODI1CgpydW5jbWQ6CiAgLSBybSAvZXRjL21vdGQKcmVzaXplX3Jvb3RmczogVHJ1ZQoKbWFuYWdlX2V0Y19ob3N0czogVHJ1ZQo="
  },
  "resources": [
    {
      "name": "[concat(variables('storageAccountNamePrefix')[copyIndex()],uniqueString(resourceGroup().id))]",
      "type": "Microsoft.Storage/storageAccounts",
      "location": "[resourceGroup().location]",
      "apiVersion": "2015-06-15",
      "copy": {
        "count": "[length(variables('storageAccountType'))]",
        "name": "storageAccountCopy"
      },
      "dependsOn": [],
      "tags": {
        "displayName": "[concat(variables('storageAccountNamePrefix')[copyIndex()],uniqueString(resourceGroup().id))]"
      },
      "properties": {
        "accountType": "[variables('storageAccountType')[copyIndex()]]"
      }
    },
    {
      "apiVersion": "2016-04-30-preview",
      "type": "Microsoft.Compute/disks",
      "name": "[concat(variables('vmDataDiskName'), copyindex(1))]",
      "location": "[resourceGroup().location]",
      "copy": {
        "name": "diskCopy",
        "count": "[parameters('vmCount')]"
      },
      "properties": {
        "creationData": {
          "createOption": "[variables('diskCreateOption')]"
        },
        "accountType": "[variables('storageAccountType')[0]]",
        "diskSizeGB": "[parameters('vmDiskGB')]"
      }
    },        
    {
      "name": "[concat(variables('vmNicName'), copyindex(1))]",
      "type": "Microsoft.Network/networkInterfaces",
      "location": "[resourceGroup().location]",
      "apiVersion": "2016-03-30",
      "tags": {
        "displayName": "[variables('vmNicName')]"
      },
      "copy" : {
      	"name": "MapRNicLoop",
      	"count": "[parameters('vmCount')]"
      },
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('subnetRef')]",
              }
            }
          }
        ]
      }
    },
    {
      "name": "[concat(variables('vmName'),'-',copyIndex(1))]",
      "type": "Microsoft.Compute/virtualMachines",
      "location": "[resourceGroup().location]",
      "apiVersion": "2016-03-30",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('vmNicName'), copyIndex(1)))]"
      ],
      "copy": {
      	"name": "VMCountLoop",
      	"count": "[parameters('vmCount')]"
      },
      "tags": {
        "displayName": "[variables('vmName')]"
      },
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')]"
        },
        "osProfile": {
          "computerName": "[concat(variables('vmName'),'-',copyindex(1))]",
          "adminUsername": "[parameters('vmAdminUserName')]",
          "customData": "[variables('cloudConfig')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": "true",
            "ssh": {
              "publicKeys": [
                {
                  "path": "[variables('sshKeyPath')]",
                  "keyData": "[parameters('sshKeyData')]"
                }
              ]
            }
          }
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('vmImagePublisher')]",
            "offer": "[variables('vm1ImageOffer')]",
            "sku": "[variables('vm1ImageSKU')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "[variables('vmOSDiskName')]",
            "diskSizeGB": "[variables('OSDiskGB')]",
            "vhd": {
              "uri": "[concat(reference(resourceId('Microsoft.Storage/storageAccounts', concat(variables('storageAccountNamePrefix')[0],uniqueString(resourceGroup().id))), '2016-01-01').primaryEndpoints.blob, variables('vmContainerName'), '/', concat(variables('vmOSDiskName'),copyIndex(1)), '.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          },
          "copy": [
            {
              "name": "dataDisks",
              "count": "[parameters('vmDiskCount')]",
              "input": {
                "name": "[concat(variables('vmName'),'-premiumdata-',copyIndex('dataDisks'))]",
                "diskSizeGB": "[parameters('vmDiskGB')]",
                "lun": "[copyIndex('dataDisks')]",
                "caching": "ReadWrite",
                "createOption": "Empty",
                "managedDisk": {  
                   "storageAccountType": "Premium_LRS"
                }
              }
            }
          ]
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('vmNicName'), copyIndex(1)))]"
            }
          ]
        }
      }
    }
  ],
  "outputs": {
    "vmURI": {
      "type": "string",
      "value": "Output"
    } 
  }
}
